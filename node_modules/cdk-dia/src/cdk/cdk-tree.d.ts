export declare class Tree {
    version: string;
    tree: Node;
    static fromObject(object: Record<string, unknown>): Tree;
}
export declare class ConstructInfoFqn {
    static STACK: ConstructInfoFqn;
    static STAGE: ConstructInfoFqn;
    static APP: ConstructInfoFqn;
    static CUSTOM_RESOURCE: ConstructInfoFqn;
    static of: (val: string) => ConstructInfoFqn | undefined;
    constructor(cdkVal: string);
    readonly cdkVal: string;
}
export declare class Node {
    id: string;
    path: string;
    children: Map<string, Node>;
    attributes: Map<string, string | Node | Record<string, string>>;
    constructInfoFqn: ConstructInfoFqn | undefined;
    pathParts: () => Array<string>;
    findInSubTree(predicate: (Node: any) => boolean): Node | null;
    static fromObject(object: Record<string, unknown | Record<string, string>>): Node;
}
