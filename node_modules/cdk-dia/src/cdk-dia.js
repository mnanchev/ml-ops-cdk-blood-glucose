"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CdkDia = void 0;
const cdk = __importStar(require("../src/cdk"));
const path = __importStar(require("path"));
const diagrams = __importStar(require("../src/diagram"));
const graphviz = __importStar(require("../src/graphviz"));
class CdkDia {
    async generateDiagram(treeJsonPath, targetPath, collapse, cdkBasePath = require.resolve('cdk-dia/package.json'), includedStacks = false) {
        const cdkTree = cdk.TreeJsonLoader.load(path.isAbsolute(treeJsonPath) ? treeJsonPath : path.join(process.cwd(), treeJsonPath));
        const generator = new diagrams.AwsDiagramGenerator(new diagrams.AwsEdgeResolver(), new diagrams.AwsIconSupplier(`${cdkBasePath}`));
        const diagram = generator.generate(cdkTree, collapse, includedStacks);
        const renderer = new graphviz.Generator(diagram);
        return renderer.generatePng(`${targetPath}`);
    }
}
exports.CdkDia = CdkDia;
//# sourceMappingURL=cdk-dia.js.map